- name: "Set default virtual MAC"
  set_fact:
    target_mac: "{{ host.mac }}"

- name: "Get MAC of bare metal machine"
  block:
  - name: Get info on discovered hosts that meet criteria
    include_tasks: tasks/get_foreman_list.yml
    vars:
      sat_resource: "{{ discovered_hosts_resouce }}"
      sat_search_string: "{{ discovered_hosts_search }}"
      sat_username: "{{ sat_publisher_username }}"
      sat_password: "{{ sat_publisher_password }}"
    # sets variables list and resources

  - set_fact:
      discovered_hosts_resources: "{{ resources }}"
    no_log: true

  - debug:
      var: resources

  - set_fact:
      mac: "{{ item.mac }}"
      name: "{{ item.name }}"
    # when condition is using > to account for local interface always in list
    when: item.facts_hash.interfaces.split(',')|length > discovered_host_req_nic_count 
    loop: "{{ resources }}"
    register: hosts_macs_results
    no_log: true

  - debug:
      var: hosts_macs_results


  - name: "Selecting first discovered host matching criteria"
    set_fact:
      target_mac: "{{ hosts_macs_results.results.ansible_facts[0].mac }}"
      target_dhostname: "{{ hosts_macs_results.results.ansible_facts[0].name }}"
  
  when: host.compute_resource == "Baremetal"

- name: "Deploy the host"
  redhat.satellite.host:
    username: "{{ sat_publisher_username }}"
    password: "{{ sat_publisher_password }}"
    server_url: "{{ sat_server_url }}"
    organization: "{{ sat_organization }}"
    location: "{{ sat_location }}"
    name: "{{ host.fqdn }}"
    comment: "{{ host_build_comment }}"
    hostgroup: "{{ host.hostgroup }}"
    compute_resource: "{{ host.compute_resource }}"
    compute_profile: "{{ host.compute_profile }}"
    mac: "{{ target_mac }}"
    build: true
    state: present
    compute_attributes:
      start: "1"
  
- name: Remove the discovered host entry
  uri:
    url: "{{ sat_server_url }}/api/v2/discovered_hosts/{{ dhost_name }}"
    method: DELETE
    user: "{{ sat_publisher_username }}"
    password: "{{ sat_publisher_password }}"
    force_basic_auth: yes
    validate_certs: no
    status_code: 200
    headers:
      Content-Type: application/json
      Accept: :application/json,version=2
  when: host.compute_resource == "Baremetal"
